[build-system]
requires = [
	"setuptools>=60",
	"setuptools_scm>=6.4",
	"pybind11>=2.6.0",
	"wheel>=0.38.0"
]
build-backend = "setuptools.build_meta"

[tool.setuptools_scm]
root = "../.."
local_scheme = "no-local-version"

[project]
name = "duckdb"
dynamic = ["version"]
description = 'DuckDB embedded database'
readme = {text = "See here for an introduction: https://duckdb.org/docs/api/python/overview", content-type = "markdown"}
keywords = ['DuckDB', 'Database', 'SQL', 'OLAP']
classifiers = [
    'Topic :: Database :: Database Engines/Servers',
    'Intended Audience :: Developers',
    'License :: OSI Approved :: MIT License',
]
license = {text = "MIT"}
maintainers = [
    { name = "Hannes Muehleisen", email = "hannes@duckdblabs.com" }
]

[project.urls]
Documentation = "https://duckdb.org/docs/api/python/overview"
Source = "https://github.com/duckdb/duckdb/blob/master/tools/pythonpkg"
Issues = "https://github.com/duckdb/duckdb/issues"
Changelog = "https://github.com/duckdb/duckdb/releases"

### CI Builwheel configurations ###

# Default config runs all tests and requires at least one extension to be tested against
[tool.cibuildwheel]
environment = "PIP_CONSTRAINT='build-constraints.txt'"
before-build = 'pip install oldest-supported-numpy'
before-test = 'pip install --prefer-binary pandas pytest-timeout mypy "psutil>=5.9.0" "requests>=2.26" fsspec   && (pip install --prefer-binary "pyarrow>=8.0" || true) && (pip install --prefer-binary "torch" || true) && (pip install --prefer-binary "polars" || true) && (pip install --prefer-binary "adbc_driver_manager" || true) && (pip install --prefer-binary "tensorflow" || true)'
test-requires = 'pytest'
test-command = 'DUCKDB_PYTHON_TEST_EXTENSION_PATH={project} DUCKDB_PYTHON_TEST_EXTENSION_REQUIRED=1 python -m pytest {project}/tests --verbose'

# For musllinux we currently don't build extensions yet
[[tool.cibuildwheel.overrides]]
select = "*-musllinux*"
test-command = "python -m pytest {project}/tests/fast --verbose"

# For 32 bit we don't build extensions
[[tool.cibuildwheel.overrides]]
select = "*i686*"
test-command = "python -m pytest {project}/tests/fast --verbose"

# For aarch64 we don't build extensions
[[tool.cibuildwheel.overrides]]
select = "*aarch64*"
test-command = "python -m pytest {project}/tests/fast --verbose"

[tool.cibuildwheel.windows]
test-command = "python -m pytest {project}/tests/fast --verbose"
